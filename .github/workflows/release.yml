name: Release

on:
  push:
    tags:
      - "*"  # 触发所有标签的推送事件

permissions:
  contents: write  # 允许对内容的写入权限

jobs:
  build-sdist:
    runs-on: ubuntu-latest

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 50
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Build source distribution
      run: |
        pip install -U setuptools wheel pip
        python setup.py sdist

    - name: Upload source distribution artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist-sdist  
        path: dist/*.tar.*

  build-wheels:
    runs-on: ubuntu-latest
    needs: build-sdist

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 50
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install CIBuildWheel
      run: pip install cibuildwheel==2.21.3

    - name: Build Wheels
      run: |
        cibuildwheel --output-dir wheelhouse

    - name: Upload Wheel Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-wheels
        path: wheelhouse/*.whl

  merge-artifacts:
    runs-on: ubuntu-latest
    needs: [build-sdist, build-wheels]

    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: dist
          delete-merged: true

  publish:
    needs: [merge-artifacts]
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/async_gaussdb
    permissions:
      id-token: write
      attestations: write
      contents: write
      deployments: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 5
        submodules: false

    - name: Download merged artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist  
        path: dist/

    - name: Extract Release Version
      id: relver
      run: |
        set -e
        echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Publish Github Release
      uses: elprans/gh-action-create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.relver.outputs.version }}
        release_name: v${{ steps.relver.outputs.version }}
        target: ${{ github.ref }}  
        body: "Release v${{ steps.relver.outputs.version }}"

    - run: |
        ls -al dist/  

    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        attestations: true